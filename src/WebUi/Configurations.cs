//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool, T4Config.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Errs.WebUi
{
    using System;
    using System.Configuration;
    using System.Diagnostics.CodeAnalysis;

    public interface IConfigurations
    {
        bool ClientValidationEnabled { get; }

        bool UnobtrusiveJavaScriptEnabled { get; }

        string LogTableName { get; }

        string LogLevel { get; }

    }

    public class Configurations : IConfigurations
    {
        private static readonly Lazy<bool> _clientValidationEnabled = new Lazy<bool>(() => Convert.ToBoolean(GetSetting("ClientValidationEnabled")));

        private static readonly Lazy<bool> _unobtrusiveJavaScriptEnabled = new Lazy<bool>(() => Convert.ToBoolean(GetSetting("UnobtrusiveJavaScriptEnabled")));

        private static readonly Lazy<string> _logTableName = new Lazy<string>(() => GetSetting("LogTableName"));

        private static readonly Lazy<string> _logLevel = new Lazy<string>(() => GetSetting("LogLevel"));


        public virtual bool ClientValidationEnabled 
        {
            get 
            {
                return _clientValidationEnabled.Value;
            }
        }

        public virtual bool UnobtrusiveJavaScriptEnabled 
        {
            get 
            {
                return _unobtrusiveJavaScriptEnabled.Value;
            }
        }

        public virtual string LogTableName 
        {
            get 
            {
                return _logTableName.Value;
            }
        }

        public virtual string LogLevel 
        {
            get 
            {
                return _logLevel.Value;
            }
        }


        public static string GetSetting(string key)
        {
            return ConfigurationManager.AppSettings[key];
        }
    }

    public interface IConnectionStrings
    {
        string LocalSqlServer { get; }

        string LoggingDb { get; }
    }

    public class ConnectionStrings : IConnectionStrings
    {
        private static readonly Lazy<string> _localSqlServer = new Lazy<string>(() => ConfigurationManager.ConnectionStrings["LocalSqlServer"].ConnectionString); 

        private static readonly Lazy<string> _loggingDb = new Lazy<string>(() => ConfigurationManager.ConnectionStrings["LoggingDb"].ConnectionString); 


        public virtual string LocalSqlServer 
        {
            get 
            {
                return _localSqlServer.Value;
            }
        }

        public virtual string LoggingDb 
        {
            get 
            {
                return _loggingDb.Value;
            }
        }
    }
}
